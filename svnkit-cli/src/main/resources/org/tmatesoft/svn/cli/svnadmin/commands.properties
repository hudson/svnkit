pack.description=\
usage:\ jsvnadmin\ pack\ REPOS_PATH\n\n\
Possibly\ compact\ the\ repository\ into\ a\ more\ efficient\ storage\ model.\n\
This\ may\ not\ apply\ to\ all\ repositories,\ in\ which\ case,\ exit.
help.description=\
usage:\ jsvnadmin\ help\ [SUBCOMMAND...]\n\n\
Describe\ the\ usage\ of\ this\ program\ or\ its\ subcommands.
create.description=\
usage:\ jsvnadmin\ create\ REPOS_PATH\n\n\
Create\ a\ new,\ empty\ repository\ at\ REPOS_PATH.
dump.description=\
usage:\ jsvnadmin\ dump\ REPOS_PATH\ [-r\ LOWER[:UPPER]\ [--incremental]]\n\n\
Dump\ the\ contents\ of\ filesystem\ to\ stdout\ in\ a\ 'dumpfile'\n\
portable\ format,\ sending\ feedback\ to\ stderr.\ \ Dump\ revisions\n\
LOWER\ rev\ through\ UPPER\ rev.\ \ If\ no\ revisions\ are\ given,\ dump\ all\n\
revision\ trees.\ \ If\ only\ LOWER\ is\ given,\ dump\ that\ one\ revision\ tree.\n\
If\ --incremental\ is\ passed,\ the\ first\ revision\ dumped\ will\ describe\n\
only\ the\ paths\ changed\ in\ that\ revision;\ otherwise\ it\ will\ describe\n\
every\ path\ present\ in\ the\ repository\ as\ of\ that\ revision.\ \ (In\ either\n\
case,\ the\ second\ and\ subsequent\ revisions,\ if\ any,\ describe\ only\ paths\n\
changed\ in\ those\ revisions.)
load.description=\
usage:\ jsvnadmin\ load\ REPOS_PATH\n\n\
Read\ a\ 'dumpfile'-formatted\ stream\ from\ stdin,\ committing\n\
new\ revisions\ into\ the\ repository's\ filesystem.\ \ If\ the\ repository\n\
was\ previously\ empty,\ its\ UUID\ will,\ by\ default,\ be\ changed\ to\ the\n\
one\ specified\ in\ the\ stream.\ \ Progress\ feedback\ is\ sent\ to\ stdout.
verify.description=\
usage:\ jsvnadmin\ verify\ REPOS_PATH\n\n\
Verifies\ the\ data\ stored\ in\ the\ repository.
lslocks.description=\
usage:\ jsvnadmin\ lslocks\ REPOS_PATH\ [PATH-IN-REPOS]\n\n\
Print\ descriptions\ of\ all\ locks\ on\ or\ under\ PATH-IN-REPOS\ (which,\n\
if\ not\ provided,\ is\ the\ root\ of\ the\ repository).
lstxns.description=\
usage:\ jsvnadmin\ lstxns\ REPOS_PATH\n\n\
Print\ the\ names\ of\ all\ uncommitted\ transactions.
rmlocks.description=\
usage:\ jsvnadmin\ rmlocks\ REPOS_PATH\ LOCKED_PATH...\n\n\
Unconditionally\ remove\ lock\ from\ each\ LOCKED_PATH.
rmtxns.description=\
usage:\ jsvnadmin\ rmtxns\ REPOS_PATH\ TXN_NAME...\n\n\
Delete\ the\ named\ transaction(s).
setlog.description=\
usage:\ jsvnadmin\ setlog\ REPOS_PATH\ -r\ REVISION\ FILE\n\n\
Set\ the\ log-message\ on\ revision\ REVISION\ to\ the\ contents\ of\ FILE.\ \ Use\n\
--bypass-hooks\ to\ avoid\ triggering\ the\ revision-property-related\ hooks\n\
(for\ example,\ if\ you\ do\ not\ want\ an\ email\ notification\ sent\n\
from\ your\ post-revprop-change\ hook,\ or\ because\ the\ modification\ of\n\
revision\ properties\ has\ not\ been\ enabled\ in\ the\ pre-revprop-change\n\
hook).\n\n\
NOTE:\ Revision\ properties\ are\ not\ versioned,\ so\ this\ command\ will\n\
overwrite\ the\ previous\ log\ message.
setrevprop.description=\
usage:\ jsvnadmin\ setrevprop\ REPOS_PATH\ -r\ REVISION\ NAME\ FILE\n\n\
Set\ the\ property\ NAME\ on\ revision\ REVISION\ to\ the\ contents\ of\ FILE.\ Use\n\
--use-pre-revprop-change-hook/--use-post-revprop-change-hook\ to\ trigger\n\
the\ revision\ property-related\ hooks\ (for\ example,\ if\ you\ want\ an\ email\n\
notification\ sent\ from\ your\ post-revprop-change\ hook).\n\n\
NOTE:\ Revision\ properties\ are\ not\ versioned,\ so\ this\ command\ will\n\
overwrite\ the\ previous\ value\ of\ the\ property.
recover.description=\
usage:\ jsvnadmin\ recover\ REPOS_PATH\n\n\
Run\ the\ recovery\ procedure\ on\ a\ repository.\ \ Do\ this\ if\ you've\n\
been\ getting\ errors\ indicating\ that\ recovery\ ought\ to\ be\ run.\n\
Berkeley\ DB\ recovery\ requires\ exclusive\ access\ and\ will\n\
exit\ if\ the\ repository\ is\ in\ use\ by\ another\ process.
upgrade.description=\
usage:\ jsvnadmin\ upgrade\ REPOS_PATH\n\n\
Upgrade\ the\ repository\ located\ at\ REPOS_PATH\ to\ the\ latest\ supported\n\
schema\ version.\n\n\
This\ functionality\ is\ provided\ as\ a\ convenience\ for\ repository\n\
administrators\ who\ wish\ to\ make\ use\ of\ new\ Subversion\ functionality\n\
without\ having\ to\ undertake\ a\ potentially\ costly\ full\ repository\ dump\n\
and\ load\ operation.\ \ As\ such,\ the\ upgrade\ performs\ only\ the\ minimum\n\
amount\ of\ work\ needed\ to\ accomplish\ this\ while\ still\ maintaining\ the\n\
integrity\ of\ the\ repository.\ \ It\ does\ not\ guarantee\ the\ most\ optimized\n\
repository\ state\ as\ a\ dump\ and\ subsequent\ load\ would.
setuuid.description=\
usage:\ jsvnadmin\ setuuid\ REPOS_PATH\ [NEW_UUID]\n\n\
Reset\ the\ repository\ UUID\ for\ the\ repository\ located\ at\ REPOS_PATH.\ \ If\n\
NEW_UUID\ is\ provided,\ use\ that\ as\ the\ new\ repository\ UUID;\ otherwise,\n\
generate\ a\ brand\ new\ UUID\ for\ the\ repository.
hotcopy.description=\
usage:\ jsvnadmin\ hotcopy\ REPOS_PATH\ NEW_REPOS_PATH\n\n\
Makes\ a\ hot\ copy\ of\ a\ repository.