group = 'org.tmatesoft.svnkit'
version = '1.3.7'
release = true
target = '1.4'
compatibleSvnVersion = '1.6.17'

buildscript {
    apply from: 'build.defaults.gradle'
    repositories {
        mavenRepo(urls: [buildPluginRepositoryURL]) {
            snapshotTimeout = org.gradle.api.internal.artifacts.ivyservice.GradleIBiblioResolver.ALWAYS
        }
    }
    dependencies { classpath 'org.tmatesoft.build:build:0.9.8-SNAPSHOT' }
}

task wrapper(type: Wrapper) {}

def javaProjects() {
    return subprojects - project(':svnkit-distribution')
}

allprojects {
    apply plugin : 'base'
    apply plugin : 'build'
}

configure(javaProjects() + rootProject) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    gradle.taskGraph.whenReady { taskGraph ->
        taskGraph.allTasks.each { task ->
            if (task.name == 'eclipseWtpComponent') {
                task.enabled = false
            }
            if (task.name == 'eclipseWtpFacet') {
                task.enabled = false
            }
        }
    }
}


configure(javaProjects()) {
    apply plugin : 'java'

    sourceCompatibility = target
    targetCompatibility = target

    configurations {
        sources
        javadocs
    }

    task sourcesJar(type: Jar) {
        description = 'Builds Java Sources Jar'
        from sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    jar {
        metaInf {
            from rootProject.file('LICENSE.txt')
        }
    }

    artifacts { sources sourcesJar }
}

project(':svnkit') {
    dependencies {
        compile 'de.regnis.q.sequence:sequence-library:1.0.0'
        compile 'org.tmatesoft.sqljet:sqljet:1.0.7'
        compile 'net.java.dev.jna:jna:3.2.7'
        compile 'com.trilead:trilead-ssh2:1.0.0-build214'
    }
    artifacts { maven jar, sourcesJar }
}

project(':svnkit-javahl16') {
    dependencies {
        compile project(path: ':svnkit')
        compile 'org.tigris.subversion:svn-javahl-api:1.6.18-SNAPSHOT'

        testCompile 'org.tigris.subversion:svn-javahl-tests:1.6.18-SNAPSHOT'
    }
    artifacts { maven jar, sourcesJar }
}

project(':svnkit-cli') {
    dependencies {
        compile project(path: ':svnkit')
    }
    artifacts { maven jar, sourcesJar }
}

project(':svnkit-test') {
    dependencies {
        compile project(path: ':svnkit-cli')
    }
    sourcesJar.enabled=false
}


project(':svnkit-osgi') {
    sourcesJar.enabled=false
    artifacts { maven jar }
}

project(':svnkit-distribution') {
    configurations {
        binaries
        sources
        scripts
        conf
        osgi
    }

    dependencies {
        binaries project(path: ':svnkit')
        binaries project(path: ':svnkit-cli')
        binaries project(path: ':svnkit-javahl16', configuration: 'archives')

        sources project(path: ':svnkit', configuration: 'sources')
        sources project(path: ':svnkit-cli', configuration: 'sources')
        sources project(path: ':svnkit-javahl16', configuration: 'sources')

        scripts project(path: ':svnkit-cli', configuration: 'scripts')
        conf project(path: ':svnkit-cli', configuration: 'conf')

        osgi project(path: ':svnkit-osgi', configuration: 'archives')
        osgi 'com.trilead:trilead-ssh2-osgi:1.0.0-build214'
        osgi 'org.tmatesoft.sqljet:sqljet-osgi:1.0.7'
        osgi 'net.java.dev.jna:jna-osgi:3.2.7'
    }
}

task publish(dependsOn: [':svnkit-distribution:buildAll']) {
    enabled = project.hasProperty('to')
} << {
    File toDir = new File(project.properties['to'])
    delete(toDir)
    toDir.mkdirs()
    ant.unzip(src: new File(project(':svnkit-distribution').distsDir, "svnkit-${version}-all.zip"), dest: toDir.absolutePath) {
       cutdirsmapper(dirs: '1')
    }    
    ant.chmod(dir: new File(toDir, 'bin').absolutePath, perm: 'ugo+rx', includes: '**/**', excludes: '**/*.bat')
}